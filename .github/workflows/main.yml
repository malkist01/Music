name: Build release APK
on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: List files in APK directory
      run: ls -R app/build/outputs/apk/release

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: app/build/outputs/apk/release/*.apk

  sign:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: gradle

    - name: Download APK from build job
      uses: actions/download-artifact@v4
      with:
        name: app
        path: app/build/outputs/apk/release/

    - name: List files in downloaded APK directory
      run: ls -R app/build/outputs/apk/release

    - name: Verify APK file exists
      run: |
        if [ ! -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
          echo "APK file not found!"
          exit 1
        fi

    - name: Decode keystore secret
      run: |
        echo "${{ secrets.KEYSTORE }}" | base64 --decode > my-release-key.jks

    - name: Install Android SDK Build Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget "https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip" -O android-sdk.zip
        unzip android-sdk.zip -d $HOME/android-sdk
        mkdir -p $HOME/android-sdk/cmdline-tools/latest
        mv $HOME/android-sdk/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/ --backup=numbered || true
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager "build-tools;34.0.0"

    - name: Check environment
      run: |
        echo "ANDROID_HOME: $ANDROID_HOME"
        ls -l $ANDROID_HOME/build-tools/34.0.0/
        ls -l app/build/outputs/apk/release/
        which apksigner

    - name: Sign APK with apksigner
      run: |
        $ANDROID_HOME/build-tools/34.0.0/apksigner sign \
          --ks my-release-key.jks \
          --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
          --ks-pass "pass:${{ secrets.KEYSTORE_PASSWORD }}" \
          --key-pass "pass:${{ secrets.KEY_PASSWORD }}" \
          --out app/build/outputs/apk/release/app-release.apk \
          app/build/outputs/apk/release/app-release-unsigned.apk

    - name: Verify Signed APK
      run: |
        $ANDROID_HOME/build-tools/34.0.0/apksigner verify --verbose app/build/outputs/apk/release/app-release.apk

    - name: Upload Signed APK
      uses: actions/upload-artifact@v4
      with:
        name: signed-app
        path: app/build/outputs/apk/release/app-release.apk
